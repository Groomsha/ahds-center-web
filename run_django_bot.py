#!/usr/bin/env python
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫—É Django –∑ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–æ–º."""

import os
import sys
import subprocess
import argparse
import platform

# –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ UTF-8 –∫–æ–¥—É–≤–∞–Ω–Ω—è –¥–ª—è Windows
if platform.system() == 'Windows':
    os.environ['PYTHONIOENCODING'] = 'utf-8'
    # –ü—Ä–∏–º—É—Å–æ–≤–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ UTF-8 –¥–ª—è stdout (–±–µ–∑ –ø–æ–º–∏–ª–æ–∫ –ª–∏–Ω—Ç–µ—Ä–∞)
    try:
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ hasattr –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ –º–µ—Ç–æ–¥—É
        if hasattr(sys.stdout, 'reconfigure'):
            sys.stdout.reconfigure(encoding='utf-8')  # type: ignore
    except (AttributeError, TypeError):
        # Fallback –¥–ª—è —Å—Ç–∞—Ä—ñ—à–∏—Ö –≤–µ—Ä—Å—ñ–π Python –∞–±–æ –ø–æ–º–∏–ª–æ–∫ –ª–∏–Ω—Ç–µ—Ä–∞
        pass

# –î–æ–¥–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–æ Python path
current_dir = os.path.dirname(os.path.abspath(__file__))
if current_dir not in sys.path:
    sys.path.insert(0, current_dir)


def get_venv_python_path() -> str:
    """ –û—Ç—Ä–∏–º–∞—Ç–∏ –∫—Ä–æ—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–Ω–∏–π —à–ª—è—Ö –¥–æ Python —É –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–º—É –æ—Ç–æ—á–µ–Ω–Ω—ñ. """
    venv_path = os.path.join(current_dir, '.venv')

    # –í–∏–∑–Ω–∞—á–∏—Ç–∏ –Ω–∞–∑–≤—É —Å–∫—Ä–∏–ø—Ç–æ–≤–æ—ó –ø–∞–ø–∫–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –û–°
    if platform.system() == 'Windows':
        scripts_dir = 'Scripts'
        python_exec = 'python.exe'
    else:
        scripts_dir = 'bin'
        python_exec = 'python'

    python_path = os.path.join(venv_path, scripts_dir, python_exec)

    # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —ñ—Å–Ω—É—î —Ñ–∞–π–ª
    if os.path.exists(python_path):
        return python_path
    else:
        # Fallback –¥–æ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ python
        return python_exec

def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è."""
    parser = argparse.ArgumentParser(description='–ó–∞–ø—É—Å–∫ Django –∑ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–æ–º')
    parser.add_argument('--no-bot', action='store_true', help='–ó–∞–ø—É—Å–∫ –±–µ–∑ –±–æ—Ç–∞')
    parser.add_argument('--test-path', action='store_true', help='–ü–æ–∫–∞–∑–∞—Ç–∏ —à–ª—è—Ö –¥–æ Python')
    parser.add_argument('django_args', nargs='*', help='–ê—Ä–≥—É–º–µ–Ω—Ç–∏ –¥–ª—è Django –∫–æ–º–∞–Ω–¥')

    args = parser.parse_args()

    # –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —à–ª—è—Ö –¥–æ Python
    python_path = get_venv_python_path()

    # –ü–æ–∫–∞–∑–∞—Ç–∏ —à–ª—è—Ö –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
    if args.test_path:
        print(f"üîç –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é Python: {python_path}")
        print(f"üìÇ –û–°: {platform.system()}")
        return

    # –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∑–º—ñ–Ω–Ω—ñ –æ—Ç–æ—á–µ–Ω–Ω—è
    env = os.environ.copy()
    env['PYTHONPATH'] = current_dir

    if args.no_bot:
        print("üåê –ó–∞–ø—É—Å–∫ Django —Å–µ—Ä–≤–µ—Ä–∞ –±–µ–∑ –±–æ—Ç–∞...")
        cmd = [python_path, 'manage.py'] + args.django_args
    else:
        print("ü§ñ –ó–∞–ø—É—Å–∫ Django —Å–µ—Ä–≤–µ—Ä–∞ –∑ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–æ–º...")
        cmd = [python_path, 'manage.py', 'run_telegram_bot']

    # –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –∫–æ–º–∞–Ω–¥—É
    try:
        subprocess.run(cmd, env=env, cwd=current_dir)
    except KeyboardInterrupt:
        print("\nüõë –ó—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

if __name__ == "__main__":
    main()